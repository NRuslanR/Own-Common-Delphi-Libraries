unit ExtendedDatabaseAuthentificationFormController;

interface

uses

  DatabaseAuthentificationFormController,
  ExtendedDatabaseAuthentificationFormViewModel,
  DatabaseAuthentificationFormViewModel,
  unExtendedDatabaseAuthentificationForm,
  SystemAuthentificationFormViewModel,
  ServiceInfo,
  Forms,
  SysUtils,
  Classes;

type

  TExtendedDatabaseAuthentificationFormController =
    class (TDatabaseAuthentificationFormController)

      protected

        procedure FillServiceInfoFromViewModel(
          ServiceInfo: TServiceInfo;
          ViewModel: TSystemAuthentificationFormViewModel
        ); override;

        function
        InternalUpdateDatabaseAuthentificationFormViewModelOnSuccessAuthentification(
          ViewModel: TDatabaseAuthentificationFormViewModel
        ): Boolean; override;

      protected

        function GetSystemAuthentificationFormViewModelClass:
          TSystemAuthentificationFormViewModelClass; override;

      protected

        function GetFormClass: TFormClass; override;
        
    end;
    
implementation

{ TExtendedDatabaseAuthentificationFormController }

procedure TExtendedDatabaseAuthentificationFormController.
  FillServiceInfoFromViewModel(
    ServiceInfo: TServiceInfo;
    ViewModel: TSystemAuthentificationFormViewModel
  );
var DatabaseServerInfo: TDatabaseServerInfo;
begin

  inherited;

  DatabaseServerInfo := ServiceInfo as TDatabaseServerInfo;

  with ViewModel as TExtendedDatabaseAuthentificationFormViewModel do begin

    DatabaseServerInfo.Host := CurrentHost;
    DatabaseServerInfo.Port := Port;
    
  end;

end;

function TExtendedDatabaseAuthentificationFormController.
  GetFormClass: TFormClass;
begin

  Result := TExtendedDatabaseAuthentificationForm;

end;

function TExtendedDatabaseAuthentificationFormController.
  GetSystemAuthentificationFormViewModelClass:
    TSystemAuthentificationFormViewModelClass;
begin

  Result := TExtendedDatabaseAuthentificationFormViewModel;

end;

function TExtendedDatabaseAuthentificationFormController.
  InternalUpdateDatabaseAuthentificationFormViewModelOnSuccessAuthentification(
    ViewModel: TDatabaseAuthentificationFormViewModel
  ): Boolean;
var IsAuthentificatingHostNew: Boolean;
begin

  Result :=
    inherited
    InternalUpdateDatabaseAuthentificationFormViewModelOnSuccessAuthentification(
      ViewModel
    );

  with ViewModel as TExtendedDatabaseAuthentificationFormViewModel
  do begin

    IsAuthentificatingHostNew := Hosts.IndexOf(CurrentHost) = -1;

    Result := Result or IsAuthentificatingHostNew;

    if IsAuthentificatingHostNew then
      Hosts.Add(CurrentHost);
    
  end;

end;

end.
